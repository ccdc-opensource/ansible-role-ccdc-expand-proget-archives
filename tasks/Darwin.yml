---
- name: Insall Homebrew + required packages
  ansible.builtin.include_role:
    name: geerlingguy.mac.homebrew
  vars:
    # This is overwritten by our group_vars (cpp.build-machines)
    homebrew_installed_packages:
      - "{{ required_packages }}"
  when: not cpp_buildmachine

- name: "{{ proget_downloads_directory }}: Ensure download directory is present"
  ansible.builtin.file:
    path: "{{ proget_downloads_directory }}"
    state: directory
    owner: "{{ ansible_user }}"
    mode: "0755"
  become: true

- name: Ensure proget status archives directory is present
  ansible.builtin.file:
    path: "{{ proget_status_directory }}"
    state: directory
    owner: "{{ ansible_user }}"
    mode: "0755"
  become: true

- name: Setup PGutil MacOS
  block:
    - name: Download PGutil {{ pgutil_version }}
      ansible.builtin.get_url:
        url: "{{ pgutil }}"
        dest: "/tmp/pgutil-osx-arm64.zip"
        mode: "0640"
        force: yes

    - name: Extract pgutil
      ansible.builtin.unarchive:
        src: "/tmp/pgutil-osx-arm64.zip"
        dest: "{{ pg_dest }}"
        remote_src: true
        mode: "0755"
      become: true

- name: Remove macOS quarantine attribute from pgutil
  become: true
  ansible.builtin.command: xattr -d com.apple.quarantine {{ pg_dest }}/pgutil
  register: xattr_rm
  failed_when: xattr_rm.rc not in [0,1]

- name: Add PGutil source
  ansible.builtin.command: >
    pgutil sources add
    --name={{ pgutil_source_name }}
    --url={{ proget_base_url }}
    --api-key={{ ansible_deployment_proget_key }}
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"

- name: Get and expand archives
  ansible.builtin.include_tasks: expand_archive_posix.yml
  loop: "{{ archive_definitions }}"
  loop_control:
    loop_var: archive
